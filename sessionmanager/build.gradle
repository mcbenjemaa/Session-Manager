apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.medmedchiheb'
apply plugin: 'maven'

group = 'com.octadev.circularseekbar'
version = '1.0.5'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"


    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'junit:junit:4.12'
    compile 'com.google.code.gson:gson:2.8.4'
    androidTestCompile 'com.android.support.test:runner:1.0.2'
    compile 'com.github.jitpack:gradle-simple:1.0'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
}


uploadArchives {
    repositories {
        mavenLocal()
    }

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

}
